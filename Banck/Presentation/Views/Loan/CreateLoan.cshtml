@model Entities.Loan

@{
    ViewBag.Title = "Crear Préstamo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* Contenedor centrado con fondo gris difuminado */
    .loan-container {
        max-width: 600px;
        margin: 2rem auto;
        padding: 2rem;
        background-color: rgba(128, 128, 128, 0.3); /* Gris con opacidad */
        backdrop-filter: blur(5px); /* Efecto difuminado */
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .loan-title {
        text-align: center;
        margin-bottom: 1.5rem;
        color: #333;
        font-size: 1.8rem;
        font-weight: bold;
    }
    /* Centramos los campos en el formulario */
    .loan-form .row {
        display: flex;
        justify-content: center;
    }

    .loan-form .col-md-12 {
        width: 100%;
    }

    .form-group {
        margin-bottom: 1.2rem;
    }

        .form-group label {
            font-weight: 500;
            margin-bottom: 0.5rem;
            display: block;
        }

    .form-control {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 0.6rem;
        width: 100%;
    }

    .btn-primary, .btn-outline-secondary {
        display: block;
        width: 100%;
        margin-top: 1.5rem;
    }
    /* Modal */
    .modal-content {
        border-radius: 8px;
    }

    .modal-header.bg-primary.text-white {
        background-color: #3498db !important;
    }
</style>

<div class="loan-container">
    <h2 class="loan-title">Crear Préstamo</h2>

    @* Mensajes de error o éxito, si existen *@
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }

    @using (Html.BeginForm("CreateLoan", "Loan", FormMethod.Post, new { id = "loanForm", @class = "loan-form needs-validation", novalidate = "novalidate" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.user_id)

        <div class="row">
            <div class="col-md-12">
                <!-- Monto Solicitado -->
                <div class="form-group">
                    @Html.LabelFor(model => model.requested_amount, "Monto Solicitado")
                    @Html.TextBoxFor(model => model.requested_amount, new
                    {
                        @class = "form-control",
                        placeholder = "Ingrese el monto solicitado",
                        type = "number",
                        min = "0.01",
                        step = "0.01",
                        required = "required"
                    })
                </div>

                <!-- Tasa de Interés -->
                <div class="form-group">
                    @Html.LabelFor(model => model.interest_rate, "Tasa de Interés")
                    @Html.TextBoxFor(model => model.interest_rate, new
                    {
                        @class = "form-control",
                        placeholder = "Ingrese la tasa de interés",
                        type = "number",
                        min = "0.01",
                        step = "0.01",
                        required = "required"
                    })
                </div>

                <!-- Plazo en Meses -->
                <div class="form-group">
                    @Html.LabelFor(model => model.payment_term_months, "Plazo (meses)")
                    @Html.TextBoxFor(model => model.payment_term_months, new
                    {
                        @class = "form-control",
                        placeholder = "Ingrese el plazo en meses",
                        type = "number",
                        min = "1",
                        step = "1",
                        required = "required"
                    })
                </div>
            </div>
        </div>

        <!-- Botón para abrir el modal de confirmación -->
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#confirmLoanModal">
            Crear Préstamo
        </button>
    }
</div>

<!-- Modal de Confirmación de Creación de Préstamo -->
<div class="modal fade" id="confirmLoanModal" tabindex="-1" aria-labelledby="confirmLoanModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="confirmLoanModalLabel">Confirmar Creación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <p>¿Estás seguro de que deseas crear el préstamo?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="confirmLoanBtn">Confirmar</button>
            </div>
        </div>
    </div>
</div>

<div class="mt-3">
    @if (ViewBag.IsAdmin != null && (bool)ViewBag.IsAdmin)
    {
        <a href="@Url.Action("ListUser", "Loan")" class="btn btn-outline-secondary">Ir a Lista de Usuarios</a>
    }
    else
    {
        <a href="@Url.Action("MyProfile", "User", new { userId = ViewBag.UserId })" class="btn btn-outline-secondary">Volver a Mi Perfil</a>
    }
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    // Validación HTML5 y Bootstrap
    (function () {
        'use strict';
        var forms = document.querySelectorAll('.needs-validation');
        Array.prototype.slice.call(forms).forEach(function (form) {
            form.addEventListener('submit', function (event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        });
    })();

    // Al hacer clic en "Confirmar" del modal, validamos y enviamos el formulario
    document.getElementById('confirmLoanBtn').addEventListener('click', function () {
        var form = document.getElementById('loanForm');
        if (form.checkValidity()) {
            form.submit();
        } else {
            form.classList.add('was-validated');
        }
    });
</script>


@model Entities.User

@{
    ViewBag.Title = "Crear Usuario";
    Layout = null;

}
<head>
    @Styles.Render("~/Content/User/css")
</head>


@if (TempData["SuccessMessage"] != null)
{
    <div id="notification" class="notification success">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div id="notification" class="notification error">
        @TempData["ErrorMessage"]
    </div>
}


<div class="form-container">
    <h2>Crear Usuario</h2>

    <!-- Sección de creación de usuario -->
    <div id="userCreationSection">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                @Html.LabelFor(model => model.first_name, "Nombre", htmlAttributes: new { @class = "form-label" })
                @Html.TextBoxFor(model => model.first_name, new { @class = "form-control minimal-input" })
                @Html.ValidationMessageFor(model => model.first_name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.last_name, "Apellido", htmlAttributes: new { @class = "form-label" })
                @Html.TextBoxFor(model => model.last_name, new { @class = "form-control minimal-input" })
                @Html.ValidationMessageFor(model => model.last_name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email, "Correo electrónico", htmlAttributes: new { @class = "form-label" })
                @Html.TextBoxFor(model => model.email, new { @class = "form-control minimal-input" })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.birth_date, "Fecha de nacimiento", htmlAttributes: new { @class = "form-label" })
                @Html.TextBoxFor(model => model.birth_date,
                     new { @class = "form-control minimal-input", type = "date", id = "birth_date" })
                @Html.ValidationMessageFor(model => model.birth_date, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.address, "Dirección", htmlAttributes: new { @class = "form-label" })
                @Html.TextBoxFor(model => model.address, new { @class = "form-control minimal-input" })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.password, "Contraseña", htmlAttributes: new { @class = "form-label" })
                @Html.TextBoxFor(model => model.password, new { @class = "form-control minimal-input", type = "password" })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.role, "Rol", htmlAttributes: new { @class = "form-label" })
                @Html.DropDownListFor(model => model.role,
                     new SelectList(new List<string> { "Admin", "Editor", "Viewer" }),
                     "Selecciona un rol",
                     new { @class = "form-control minimal-input" })
                @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger" })
            </div>

            <div class="form-buttons">
                <button type="submit" class="btn minimal-btn" onclick="handleSubmit(event)">Crear</button>
                <a href="@Url.Action("List")" class="btn minimal-btn-cancel">Cancelar</a>
            </div>
        }
    </div>

    <!-- Sección de verificación del código -->
    <div id="codeVerificationSection" style="display: none; margin-top: 30px;">
        <h3>Verificar Código</h3>
        <form id="verifyCodeForm">
            <div class="form-group">
                <label for="verificationCode">Código de Verificación:</label>
                <input type="text" id="verificationCode" name="code" class="form-control minimal-input" required />
            </div>

            <button type="submit" class="btn minimal-btn">Verificar y Crear Usuario</button>
        </form>
        <div id="resultMessage" style="margin-top: 15px; color: green;"></div>
    </div>
</div>

    <script>
        // Función para escapar caracteres especiales


        document.addEventListener('DOMContentLoaded', function () {
            const now = new Date();
            const formattedDate = now.toISOString().slice(0, 16); // Formato para el campo datetime-local
            const createdAtInput = document.getElementById('CreatedAt');

            // Solo asignar la fecha actual si el campo está vacío
            if (!createdAtInput.value) {
                createdAtInput.value = formattedDate;
            }
        });

        function escapeHTML(str) {
            return str.replace(/[&<>"']/g, function (char) {
                return {
                    '&': '&amp;',
                    '<': '&lt;',
                    '>': '&gt;',
                    '"': '&quot;',
                    "'": '&#039;'
                }[char];
            });
        }

        function handleSubmit(event) {
            event.preventDefault(); // Evitar el envío del formulario

            const firstName = escapeHTML(document.getElementById('first_name').value);
            const lastName = escapeHTML(document.getElementById('last_name').value);
            const email = escapeHTML(document.getElementById('email').value);
            const birthDate = escapeHTML(document.getElementById('birth_date').value);
            const address = escapeHTML(document.getElementById('address').value);
            const password = escapeHTML(document.getElementById('password').value);
            const role = escapeHTML(document.getElementById('role').value);

            // Asignar los valores escapados a los campos del formulario
            document.getElementById('first_name').value = firstName;
            document.getElementById('last_name').value = lastName;
            document.getElementById('email').value = email;
            document.getElementById('birth_date').value = birthDate;
            document.getElementById('address').value = address;
            document.getElementById('password').value = password;
            document.getElementById('role').value = role;

            // Enviar el formulario
            event.target.form.submit();

        }
    </script>



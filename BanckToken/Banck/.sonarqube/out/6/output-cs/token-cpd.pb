ê
eC:\Users\ASUS TUF A15\source\repos\DesarrolloSeguro\BankSystem\Banck\Proxy\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str  
)  !
]! "
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str "
)" #
]# $
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[   
assembly   	
:  	 

AssemblyVersion   
(   
$str   $
)  $ %
]  % &
[!! 
assembly!! 	
:!!	 

AssemblyFileVersion!! 
(!! 
$str!! (
)!!( )
]!!) *∑x
[C:\Users\ASUS TUF A15\source\repos\DesarrolloSeguro\BankSystem\Banck\Proxy\ProxyUserData.cs
	namespace

 	
Proxy


 
{ 
public 

class 
ProxyUserData 
{ 
string 
BaseAddress 
= 
$str 6
;6 7
private 
async 
Task 
< 
T 
> 
SendPost &
<& '
T' (
,( )
PostData* 2
>2 3
(3 4
string4 :

requestURI; E
,E F
PostDataG O
dataP T
)T U
{ 	
T 
Result 
= 
default 
( 
T  
)  !
;! "
using 
( 
var 
Client 
= 
new  #

HttpClient$ .
(. /
)/ 0
)0 1
{ 
try 
{ 

requestURI 
=  
BaseAddress! ,
+- .

requestURI/ 9
;9 :
Client 
. !
DefaultRequestHeaders 0
.0 1
Accept1 7
.7 8
Clear8 =
(= >
)> ?
;? @
Client 
. !
DefaultRequestHeaders 0
.0 1
Accept1 7
.7 8
Add8 ;
(; <
new< ?+
MediaTypeWithQualityHeaderValue@ _
(_ `
$str` r
)r s
)s t
;t u
var 
JSONData  
=! "
JsonConvert# .
.. /
SerializeObject/ >
(> ?
data? C
)C D
;D E
var 
Response  
=! "
await# (
Client) /
./ 0
	PostAsync0 9
(9 :

requestURI: D
,D E
newF I
StringContentJ W
(W X
JSONDataX `
,` a
Encodingb j
.j k
UTF8k o
,o p
$str	q É
)
É Ñ
)
Ñ Ö
;
Ö Ü
var 
ResultWebAPI $
=% &
await' ,
Response- 5
.5 6
Content6 =
.= >
ReadAsStringAsync> O
(O P
)P Q
;Q R
Result   
=   
JsonConvert   (
.  ( )
DeserializeObject  ) :
<  : ;
T  ; <
>  < =
(  = >
ResultWebAPI  > J
)  J K
;  K L
}!! 
catch"" 
("" 
	Exception""  
ex""! #
)""# $
{## 
Console$$ 
.$$ 
	WriteLine$$ %
($$% &
$"$$& (
$str$$( ;
{$$; <
ex$$< >
.$$> ?
Message$$? F
}$$F G
"$$G H
)$$H I
;$$I J
}%% 
}&& 
return'' 
Result'' 
;'' 
}(( 	
private++ 
async++ 
Task++ 
<++ 
T++ 
>++ 
SendGet++ %
<++% &
T++& '
>++' (
(++( )
string++) /

requestURI++0 :
)++: ;
{,, 	
T-- 
Result-- 
=-- 
default-- 
(-- 
T--  
)--  !
;--! "
using.. 
(.. 
var.. 
Client.. 
=.. 
new..  #

HttpClient..$ .
(... /
)../ 0
)..0 1
{// 
try00 
{11 

requestURI22 
=22  
BaseAddress22! ,
+22- .

requestURI22/ 9
;229 :
Client33 
.33 !
DefaultRequestHeaders33 0
.330 1
Accept331 7
.337 8
Clear338 =
(33= >
)33> ?
;33? @
Client44 
.44 !
DefaultRequestHeaders44 0
.440 1
Accept441 7
.447 8
Add448 ;
(44; <
new44< ?+
MediaTypeWithQualityHeaderValue44@ _
(44_ `
$str44` r
)44r s
)44s t
;44t u
var66 

ResultJSON66 "
=66# $
await66% *
Client66+ 1
.661 2
GetStringAsync662 @
(66@ A

requestURI66A K
)66K L
;66L M
Result77 
=77 
JsonConvert77 (
.77( )
DeserializeObject77) :
<77: ;
T77; <
>77< =
(77= >

ResultJSON77> H
)77H I
;77I J
}88 
catch99 
(99 
	Exception99  
ex99! #
)99# $
{:: 
Console;; 
.;; 
	WriteLine;; %
(;;% &
$";;& (
$str;;( :
{;;: ;
ex;;; =
.;;= >
Message;;> E
};;E F
";;F G
);;G H
;;;H I
}<< 
}== 
return>> 
Result>> 
;>> 
}?? 	
privateBB 
asyncBB 
TaskBB 
<BB 
TBB 
>BB 
SendPutBB %
<BB% &
TBB& '
,BB' (
PutDataBB) 0
>BB0 1
(BB1 2
stringBB2 8

requestURIBB9 C
,BBC D
PutDataBBE L
dataBBM Q
)BBQ R
{CC 	
TDD 
ResultDD 
=DD 
defaultDD 
(DD 
TDD  
)DD  !
;DD! "
usingEE 
(EE 
varEE 
ClientEE 
=EE 
newEE  #

HttpClientEE$ .
(EE. /
)EE/ 0
)EE0 1
{FF 
tryGG 
{HH 

requestURIII 
=II  
BaseAddressII! ,
+II- .

requestURIII/ 9
;II9 :
ClientJJ 
.JJ !
DefaultRequestHeadersJJ 0
.JJ0 1
AcceptJJ1 7
.JJ7 8
ClearJJ8 =
(JJ= >
)JJ> ?
;JJ? @
ClientKK 
.KK !
DefaultRequestHeadersKK 0
.KK0 1
AcceptKK1 7
.KK7 8
AddKK8 ;
(KK; <
newKK< ?+
MediaTypeWithQualityHeaderValueKK@ _
(KK_ `
$strKK` r
)KKr s
)KKs t
;KKt u
varMM 
JSONDataMM  
=MM! "
JsonConvertMM# .
.MM. /
SerializeObjectMM/ >
(MM> ?
dataMM? C
)MMC D
;MMD E
varNN 
ResponseNN  
=NN! "
awaitNN# (
ClientNN) /
.NN/ 0
PutAsyncNN0 8
(NN8 9

requestURINN9 C
,NNC D
newNNE H
StringContentNNI V
(NNV W
JSONDataNNW _
,NN_ `
EncodingNNa i
.NNi j
UTF8NNj n
,NNn o
$str	NNp Ç
)
NNÇ É
)
NNÉ Ñ
;
NNÑ Ö
varPP 
ResultWebAPIPP $
=PP% &
awaitPP' ,
ResponsePP- 5
.PP5 6
ContentPP6 =
.PP= >
ReadAsStringAsyncPP> O
(PPO P
)PPP Q
;PPQ R
ResultQQ 
=QQ 
JsonConvertQQ (
.QQ( )
DeserializeObjectQQ) :
<QQ: ;
TQQ; <
>QQ< =
(QQ= >
ResultWebAPIQQ> J
)QQJ K
;QQK L
}RR 
catchSS 
(SS 
	ExceptionSS  
exSS! #
)SS# $
{TT 
ConsoleUU 
.UU 
	WriteLineUU %
(UU% &
$"UU& (
$strUU( :
{UU: ;
exUU; =
.UU= >
MessageUU> E
}UUE F
"UUF G
)UUG H
;UUH I
}VV 
}WW 
returnXX 
ResultXX 
;XX 
}YY 	
public\\ 
async\\ 
Task\\ 
<\\ 
ResponseDto\\ %
>\\% &
CreateUserData\\' 5
(\\5 6
	User_Data\\6 ?
userData\\@ H
)\\H I
{]] 	
try^^ 
{__ 
var`` 
response`` 
=`` 
await`` $
SendPost``% -
<``- .
ResponseDto``. 9
,``9 :
	User_Data``; D
>``D E
(``E F
$str``F d
,``d e
userData``f n
)``n o
;``o p
ifbb 
(bb 
responsebb 
!=bb 
nullbb  $
)bb$ %
{cc 
returndd 
responsedd #
;dd# $
}ee 
elseff 
{gg 
throwhh 
newhh 
	Exceptionhh '
(hh' (
$strhh( Q
)hhQ R
;hhR S
}ii 
}jj 
catchkk 
(kk 
	Exceptionkk 
exkk 
)kk  
{ll 
throwmm 
newmm 
	Exceptionmm #
(mm# $
$"mm$ &
$strmm& L
{mmL M
exmmM O
.mmO P
MessagemmP W
}mmW X
"mmX Y
)mmY Z
;mmZ [
}nn 
}oo 	
publicrr 
asyncrr 
Taskrr 
<rr 
UserDataResponseDtorr -
>rr- .
GetAllUserDatarr/ =
(rr= >
)rr> ?
{ss 	
trytt 
{uu 
varvv 
responsevv 
=vv 
awaitvv $
SendGetvv% ,
<vv, -
UserDataResponseDtovv- @
>vv@ A
(vvA B
$strvvB `
)vv` a
;vva b
ifxx 
(xx 
responsexx 
!=xx 
nullxx  $
)xx$ %
{yy 
returnzz 
responsezz #
;zz# $
}{{ 
else|| 
{}} 
throw~~ 
new~~ 
	Exception~~ '
(~~' (
$str~~( S
)~~S T
;~~T U
} 
}
ÄÄ 
catch
ÅÅ 
(
ÅÅ 
	Exception
ÅÅ 
ex
ÅÅ 
)
ÅÅ  
{
ÇÇ 
throw
ÉÉ 
new
ÉÉ 
	Exception
ÉÉ #
(
ÉÉ# $
$"
ÉÉ$ &
$str
ÉÉ& N
{
ÉÉN O
ex
ÉÉO Q
.
ÉÉQ R
Message
ÉÉR Y
}
ÉÉY Z
"
ÉÉZ [
)
ÉÉ[ \
;
ÉÉ\ ]
}
ÑÑ 
}
ÖÖ 	
public
àà 
async
àà 
Task
àà 
<
àà !
UserDataResponseDto
àà -
>
àà- .
GetUserDataById
àà/ >
(
àà> ?
int
àà? B
id
ààC E
)
ààE F
{
ââ 	
try
ää 
{
ãã 
var
çç 
response
çç 
=
çç 
await
çç $
SendGet
çç% ,
<
çç, -!
UserDataResponseDto
çç- @
>
çç@ A
(
ççA B
$"
ççB D
$str
ççD b
{
ççb c
id
ççc e
}
ççe f
"
ççf g
)
ççg h
;
ççh i
if
êê 
(
êê 
response
êê 
==
êê 
null
êê  $
||
êê% '
response
êê( 0
.
êê0 1
UserData
êê1 9
==
êê: <
null
êê= A
)
êêA B
{
ëë 
return
ìì 
new
ìì !
UserDataResponseDto
ìì 2
{
îî 
Success
ïï 
=
ïï  !
false
ïï" '
,
ïï' (
Message
ññ 
=
ññ  !
$str
ññ" W
}
óó 
;
óó 
}
òò 
response
õõ 
.
õõ 
Success
õõ  
=
õõ! "
true
õõ# '
;
õõ' (
return
úú 
response
úú 
;
úú  
}
ùù 
catch
ûû 
(
ûû 
	Exception
ûû 
ex
ûû 
)
ûû  
{
üü 
return
°° 
new
°° !
UserDataResponseDto
°° .
{
¢¢ 
Success
££ 
=
££ 
false
££ #
,
££# $
Message
§§ 
=
§§ 
$"
§§  
$str
§§  O
{
§§O P
ex
§§P R
.
§§R S
Message
§§S Z
}
§§Z [
"
§§[ \
}
•• 
;
•• 
}
¶¶ 
}
ßß 	
public
¨¨ 
async
¨¨ 
Task
¨¨ 
<
¨¨ 
ResponseDto
¨¨ %
>
¨¨% &
DeleteUserData
¨¨' 5
(
¨¨5 6
int
¨¨6 9
id
¨¨: <
)
¨¨< =
{
≠≠ 	
try
ÆÆ 
{
ØØ 
return
∞∞ 
await
∞∞ 
SendPost
∞∞ %
<
∞∞% &
ResponseDto
∞∞& 1
,
∞∞1 2
int
∞∞3 6
>
∞∞6 7
(
∞∞7 8
$"
∞∞8 :
$str
∞∞: W
{
∞∞W X
id
∞∞X Z
}
∞∞Z [
"
∞∞[ \
,
∞∞\ ]
id
∞∞^ `
)
∞∞` a
;
∞∞a b
}
±± 
catch
≤≤ 
(
≤≤ 
	Exception
≤≤ 
ex
≤≤ 
)
≤≤  
{
≥≥ 
throw
¥¥ 
new
¥¥ 
	Exception
¥¥ #
(
¥¥# $
$"
¥¥$ &
$str
¥¥& O
{
¥¥O P
ex
¥¥P R
.
¥¥R S
Message
¥¥S Z
}
¥¥Z [
"
¥¥[ \
)
¥¥\ ]
;
¥¥] ^
}
µµ 
}
∂∂ 	
public
ππ 
async
ππ 
Task
ππ 
<
ππ !
UserDataResponseDto
ππ -
>
ππ- .
UpdateUserData
ππ/ =
(
ππ= >
int
ππ> A
id
ππB D
,
ππD E
	User_Data
ππF O
userData
ππP X
)
ππX Y
{
∫∫ 	
try
ªª 
{
ºº 
var
ææ 
response
ææ 
=
ææ 
await
ææ $
SendPut
ææ% ,
<
ææ, -!
UserDataResponseDto
ææ- @
,
ææ@ A
	User_Data
ææB K
>
ææK L
(
ææL M
$"
ææM O
$str
ææO l
{
ææl m
id
ææm o
}
ææo p
"
ææp q
,
ææq r
userData
ææs {
)
ææ{ |
;
ææ| }
if
¡¡ 
(
¡¡ 
response
¡¡ 
==
¡¡ 
null
¡¡  $
||
¡¡% '
!
¡¡( )
response
¡¡) 1
.
¡¡1 2
Success
¡¡2 9
)
¡¡9 :
{
¬¬ 
return
√√ 
new
√√ !
UserDataResponseDto
√√ 2
{
ƒƒ 
Success
≈≈ 
=
≈≈  !
false
≈≈" '
,
≈≈' (
Message
∆∆ 
=
∆∆  !
$str
∆∆" B
}
«« 
;
«« 
}
»» 
return
ÀÀ 
response
ÀÀ 
;
ÀÀ  
}
ÃÃ 
catch
ÕÕ 
(
ÕÕ 
	Exception
ÕÕ 
ex
ÕÕ 
)
ÕÕ  
{
ŒŒ 
return
œœ 
new
œœ !
UserDataResponseDto
œœ .
{
–– 
Success
—— 
=
—— 
false
—— #
,
——# $
Message
““ 
=
““ 
$"
““  
$str
““  K
{
““K L
ex
““L N
.
““N O
Message
““O V
}
““V W
"
““W X
}
”” 
;
”” 
}
‘‘ 
}
’’ 	
}
ÿÿ 
}ŸŸ ¿±
WC:\Users\ASUS TUF A15\source\repos\DesarrolloSeguro\BankSystem\Banck\Proxy\ProxyUser.cs
	namespace 	
Proxy
 
{ 
public 

class 
	ProxyUser 
: 
IUserService )
{ 
string 
BaseAddress 
= 
$str 6
;6 7
private 
async 
Task 
< 
T 
> 
SendPost &
<& '
T' (
,( )
PostData* 2
>2 3
(3 4
string4 :

requestURI; E
,E F
PostDataG O
dataP T
)T U
{ 	
T 
Result 
= 
default 
( 
T  
)  !
;! "
using 
( 
var 
Client 
= 
new  #

HttpClient$ .
(. /
)/ 0
)0 1
{ 
try 
{ 

requestURI 
=  
BaseAddress! ,
+- .

requestURI/ 9
;9 :
Client 
. !
DefaultRequestHeaders 0
.0 1
Accept1 7
.7 8
Clear8 =
(= >
)> ?
;? @
Client 
. !
DefaultRequestHeaders 0
.0 1
Accept1 7
.7 8
Add8 ;
(; <
new< ?+
MediaTypeWithQualityHeaderValue@ _
(_ `
$str` r
)r s
)s t
;t u
var 
JSONData  
=! "
JsonConvert# .
.. /
SerializeObject/ >
(> ?
data? C
)C D
;D E
var 
Response  
=! "
await# (
Client) /
./ 0
	PostAsync0 9
(9 :

requestURI: D
,D E
newF I
StringContentJ W
(W X
JSONDataX `
,` a
Encodingb j
.j k
UTF8k o
,o p
$str	q É
)
É Ñ
)
Ñ Ö
;
Ö Ü
var   
ResultWebAPI   $
=  % &
await  ' ,
Response  - 5
.  5 6
Content  6 =
.  = >
ReadAsStringAsync  > O
(  O P
)  P Q
;  Q R
Result!! 
=!! 
JsonConvert!! (
.!!( )
DeserializeObject!!) :
<!!: ;
T!!; <
>!!< =
(!!= >
ResultWebAPI!!> J
)!!J K
;!!K L
}"" 
catch## 
(## 
	Exception##  
ex##! #
)### $
{$$ 
Console%% 
.%% 
	WriteLine%% %
(%%% &
$"%%& (
$str%%( ;
{%%; <
ex%%< >
.%%> ?
Message%%? F
}%%F G
"%%G H
)%%H I
;%%I J
}&& 
}'' 
return(( 
Result(( 
;(( 
})) 	
private-- 
async-- 
Task-- 
<-- 
T-- 
>-- 
SendGet-- %
<--% &
T--& '
>--' (
(--( )
string--) /

requestURI--0 :
)--: ;
{.. 	
T// 
Result// 
=// 
default// 
(// 
T//  
)//  !
;//! "
using00 
(00 
var00 
Client00 
=00 
new00  #

HttpClient00$ .
(00. /
)00/ 0
)000 1
{11 
try22 
{33 

requestURI44 
=44  
BaseAddress44! ,
+44- .

requestURI44/ 9
;449 :
Client55 
.55 !
DefaultRequestHeaders55 0
.550 1
Accept551 7
.557 8
Clear558 =
(55= >
)55> ?
;55? @
Client66 
.66 !
DefaultRequestHeaders66 0
.660 1
Accept661 7
.667 8
Add668 ;
(66; <
new66< ?+
MediaTypeWithQualityHeaderValue66@ _
(66_ `
$str66` r
)66r s
)66s t
;66t u
var88 

ResultJSON88 "
=88# $
await88% *
Client88+ 1
.881 2
GetStringAsync882 @
(88@ A

requestURI88A K
)88K L
;88L M
Result99 
=99 
JsonConvert99 (
.99( )
DeserializeObject99) :
<99: ;
T99; <
>99< =
(99= >

ResultJSON99> H
)99H I
;99I J
}:: 
catch;; 
(;; 
	Exception;;  
ex;;! #
);;# $
{<< 
Console== 
.== 
	WriteLine== %
(==% &
$"==& (
$str==( :
{==: ;
ex==; =
.=== >
Message==> E
}==E F
"==F G
)==G H
;==H I
}>> 
}?? 
return@@ 
Result@@ 
;@@ 
}AA 	
privateEE 
asyncEE 
TaskEE 
<EE 
TEE 
>EE 
SendPutEE %
<EE% &
TEE& '
,EE' (
PutDataEE) 0
>EE0 1
(EE1 2
stringEE2 8

requestURIEE9 C
,EEC D
PutDataEEE L
dataEEM Q
)EEQ R
{FF 	
TGG 
ResultGG 
=GG 
defaultGG 
(GG 
TGG  
)GG  !
;GG! "
usingHH 
(HH 
varHH 
ClientHH 
=HH 
newHH  #

HttpClientHH$ .
(HH. /
)HH/ 0
)HH0 1
{II 
tryJJ 
{KK 

requestURILL 
=LL  
BaseAddressLL! ,
+LL- .

requestURILL/ 9
;LL9 :
ClientMM 
.MM !
DefaultRequestHeadersMM 0
.MM0 1
AcceptMM1 7
.MM7 8
ClearMM8 =
(MM= >
)MM> ?
;MM? @
ClientNN 
.NN !
DefaultRequestHeadersNN 0
.NN0 1
AcceptNN1 7
.NN7 8
AddNN8 ;
(NN; <
newNN< ?+
MediaTypeWithQualityHeaderValueNN@ _
(NN_ `
$strNN` r
)NNr s
)NNs t
;NNt u
varPP 
JSONDataPP  
=PP! "
JsonConvertPP# .
.PP. /
SerializeObjectPP/ >
(PP> ?
dataPP? C
)PPC D
;PPD E
varQQ 
ResponseQQ  
=QQ! "
awaitQQ# (
ClientQQ) /
.QQ/ 0
PutAsyncQQ0 8
(QQ8 9

requestURIQQ9 C
,QQC D
newQQE H
StringContentQQI V
(QQV W
JSONDataQQW _
,QQ_ `
EncodingQQa i
.QQi j
UTF8QQj n
,QQn o
$str	QQp Ç
)
QQÇ É
)
QQÉ Ñ
;
QQÑ Ö
varSS 
ResultWebAPISS $
=SS% &
awaitSS' ,
ResponseSS- 5
.SS5 6
ContentSS6 =
.SS= >
ReadAsStringAsyncSS> O
(SSO P
)SSP Q
;SSQ R
ResultTT 
=TT 
JsonConvertTT (
.TT( )
DeserializeObjectTT) :
<TT: ;
TTT; <
>TT< =
(TT= >
ResultWebAPITT> J
)TTJ K
;TTK L
}UU 
catchVV 
(VV 
	ExceptionVV  
exVV! #
)VV# $
{WW 
ConsoleXX 
.XX 
	WriteLineXX %
(XX% &
$"XX& (
$strXX( :
{XX: ;
exXX; =
.XX= >
MessageXX> E
}XXE F
"XXF G
)XXG H
;XXH I
}YY 
}ZZ 
return[[ 
Result[[ 
;[[ 
}\\ 	
public``  
UserCreationResponse`` #
Create``$ *
(``* +
User``+ /
users``0 5
)``5 6
{aa 	
trybb 
{cc 
vardd 
responsedd 
=dd 
Taskdd #
.dd# $
Rundd$ '
(dd' (
asyncdd( -
(dd. /
)dd/ 0
=>dd1 3
awaitdd4 9
SendPostdd: B
<ddB C 
UserCreationResponseddC W
,ddW X
UserddY ]
>dd] ^
(dd^ _
$strdd_ u
,ddu v
usersddw |
)dd| }
)dd} ~
.dd~ 
Result	dd Ö
;
ddÖ Ü
ifff 
(ff 
responseff 
!=ff 
nullff  $
&&ff% '
!ff( )
stringff) /
.ff/ 0
IsNullOrEmptyff0 =
(ff= >
responseff> F
.ffF G
MessageffG N
)ffN O
)ffO P
{gg 
returnhh 
responsehh #
;hh# $
}ii 
elsejj 
{kk 
throwll 
newll 
	Exceptionll '
(ll' (
$strll( F
)llF G
;llG H
}mm 
}nn 
catchoo 
(oo 
	Exceptionoo 
exoo 
)oo  
{pp 
throwqq 
newqq 
	Exceptionqq #
(qq# $
$"qq$ &
$strqq& >
{qq> ?
exqq? A
.qqA B
MessageqqB I
}qqI J
"qqJ K
)qqK L
;qqL M
}rr 
}ss 	
publicvv 
asyncvv 
Taskvv 
<vv  
UserCreationResponsevv .
>vv. /
VerifyAndCreateUservv0 C
(vvC D
stringvvD J
emailvvK P
,vvP Q
stringvvR X
codevvY ]
)vv] ^
{ww 	
varxx 
verifyRequestxx 
=xx 
newxx  #
VerifyCodeRequestxx$ 5
{yy 
Emailzz 
=zz 
emailzz 
,zz 
Code{{ 
={{ 
code{{ 
}|| 
;|| 
try~~ 
{ 
var
ÅÅ 
response
ÅÅ 
=
ÅÅ 
await
ÅÅ $
SendPost
ÅÅ% -
<
ÅÅ- ."
UserCreationResponse
ÅÅ. B
,
ÅÅB C
VerifyCodeRequest
ÅÅD U
>
ÅÅU V
(
ÅÅV W
$str
ÅÅW v
,
ÅÅv w
verifyRequestÅÅx Ö
)ÅÅÖ Ü
;ÅÅÜ á
if
ÉÉ 
(
ÉÉ 
response
ÉÉ 
!=
ÉÉ 
null
ÉÉ  $
)
ÉÉ$ %
{
ÑÑ 
return
ÖÖ 
response
ÖÖ #
;
ÖÖ# $
}
ÜÜ 
else
áá 
{
àà 
throw
ââ 
new
ââ 
	Exception
ââ '
(
ââ' (
$str
ââ( \
)
ââ\ ]
;
ââ] ^
}
ää 
}
ãã 
catch
åå 
(
åå 
	Exception
åå 
ex
åå 
)
åå  
{
çç 
throw
éé 
new
éé 
	Exception
éé #
(
éé# $
$"
éé$ &
$str
éé& W
{
ééW X
ex
ééX Z
.
ééZ [
Message
éé[ b
}
ééb c
"
ééc d
)
ééd e
;
éée f
}
èè 
}
êê 	
public
ìì 
async
ìì 
Task
ìì 
<
ìì 
LoginResponse
ìì '
>
ìì' (
Login
ìì) .
(
ìì. /
string
ìì/ 5
email
ìì6 ;
,
ìì; <
string
ìì= C
password
ììD L
)
ììL M
{
îî 	
var
ïï 
loginRequest
ïï 
=
ïï 
new
ïï "
LoginRequest
ïï# /
{
ññ 
Email
óó 
=
óó 
email
óó 
,
óó 
Password
òò 
=
òò 
password
òò #
}
ôô 
;
ôô 
try
õõ 
{
úú 
var
ùù 
response
ùù 
=
ùù 
await
ùù $
SendPost
ùù% -
<
ùù- .
LoginResponse
ùù. ;
,
ùù; <
LoginRequest
ùù= I
>
ùùI J
(
ùùJ K
$str
ùùK \
,
ùù\ ]
loginRequest
ùù^ j
)
ùùj k
;
ùùk l
if
üü 
(
üü 
response
üü 
!=
üü 
null
üü  $
&&
üü% '
!
üü( )
string
üü) /
.
üü/ 0
IsNullOrEmpty
üü0 =
(
üü= >
response
üü> F
.
üüF G
Message
üüG N
)
üüN O
)
üüO P
{
†† 
return
°° 
response
°° #
;
°°# $
}
¢¢ 
else
££ 
{
§§ 
throw
•• 
new
•• 
	Exception
•• '
(
••' (
$str
••( G
)
••G H
;
••H I
}
¶¶ 
}
ßß 
catch
®® 
(
®® 
	Exception
®® 
ex
®® 
)
®®  
{
©© 
throw
™™ 
new
™™ 
	Exception
™™ #
(
™™# $
$"
™™$ &
$str
™™& ?
{
™™? @
ex
™™@ B
.
™™B C
Message
™™C J
}
™™J K
"
™™K L
)
™™L M
;
™™M N
}
´´ 
}
¨¨ 	
public
∞∞ 
async
∞∞ 
Task
∞∞ 
<
∞∞ 
LoginResponse
∞∞ '
>
∞∞' (

VerifyCode
∞∞) 3
(
∞∞3 4
string
∞∞4 :
email
∞∞; @
,
∞∞@ A
string
∞∞B H
code
∞∞I M
)
∞∞M N
{
±± 	
var
≤≤ 
verifyRequest
≤≤ 
=
≤≤ 
new
≤≤  #
VerifyCodeRequest
≤≤$ 5
{
≥≥ 
Email
¥¥ 
=
¥¥ 
email
¥¥ 
,
¥¥ 
Code
µµ 
=
µµ 
code
µµ 
}
∂∂ 
;
∂∂ 
try
∏∏ 
{
ππ 
var
∫∫ 
response
∫∫ 
=
∫∫ 
await
∫∫ $
SendPost
∫∫% -
<
∫∫- .
LoginResponse
∫∫. ;
,
∫∫; <
VerifyCodeRequest
∫∫= N
>
∫∫N O
(
∫∫O P
$str
∫∫P f
,
∫∫f g
verifyRequest
∫∫h u
)
∫∫u v
;
∫∫v w
if
ºº 
(
ºº 
response
ºº 
!=
ºº 
null
ºº  $
)
ºº$ %
{
ΩΩ 
return
ææ 
response
ææ #
;
ææ# $
}
øø 
else
¿¿ 
{
¡¡ 
throw
¬¬ 
new
¬¬ 
	Exception
¬¬ '
(
¬¬' (
$str
¬¬( X
)
¬¬X Y
;
¬¬Y Z
}
√√ 
}
ƒƒ 
catch
≈≈ 
(
≈≈ 
	Exception
≈≈ 
ex
≈≈ 
)
≈≈  
{
∆∆ 
throw
«« 
new
«« 
	Exception
«« #
(
««# $
$"
««$ &
$str
««& D
{
««D E
ex
««E G
.
««G H
Message
««H O
}
««O P
"
««P Q
)
««Q R
;
««R S
}
»» 
}
…… 	
public
ÕÕ 
async
ÕÕ 
Task
ÕÕ 
<
ÕÕ 
UserResponseDto
ÕÕ )
>
ÕÕ) *
GetAllUsers
ÕÕ+ 6
(
ÕÕ6 7
)
ÕÕ7 8
{
ŒŒ 	
try
œœ 
{
–– 
var
—— 
response
—— 
=
—— 
await
—— $
SendGet
——% ,
<
——, -
UserResponseDto
——- <
>
——< =
(
——= >
$str
——> U
)
——U V
;
——V W
if
”” 
(
”” 
response
”” 
!=
”” 
null
””  $
)
””$ %
{
‘‘ 
return
’’ 
response
’’ #
;
’’# $
}
÷÷ 
else
◊◊ 
{
ÿÿ 
throw
ŸŸ 
new
ŸŸ 
	Exception
ŸŸ '
(
ŸŸ' (
$str
ŸŸ( J
)
ŸŸJ K
;
ŸŸK L
}
⁄⁄ 
}
€€ 
catch
‹‹ 
(
‹‹ 
	Exception
‹‹ 
ex
‹‹ 
)
‹‹  
{
›› 
throw
ﬁﬁ 
new
ﬁﬁ 
	Exception
ﬁﬁ #
(
ﬁﬁ# $
$"
ﬁﬁ$ &
$str
ﬁﬁ& E
{
ﬁﬁE F
ex
ﬁﬁF H
.
ﬁﬁH I
Message
ﬁﬁI P
}
ﬁﬁP Q
"
ﬁﬁQ R
)
ﬁﬁR S
;
ﬁﬁS T
}
ﬂﬂ 
}
‡‡ 	
public
ÊÊ 
UserResponseDto
ÊÊ 
GetUserById
ÊÊ *
(
ÊÊ* +
int
ÊÊ+ .
id
ÊÊ/ 1
)
ÊÊ1 2
{
ÁÁ 	
try
ËË 
{
ÈÈ 
return
ÍÍ 
Task
ÍÍ 
.
ÍÍ 
Run
ÍÍ 
(
ÍÍ  
async
ÍÍ  %
(
ÍÍ& '
)
ÍÍ' (
=>
ÍÍ) +
await
ÍÍ, 1
SendGet
ÍÍ2 9
<
ÍÍ9 :
UserResponseDto
ÍÍ: I
>
ÍÍI J
(
ÍÍJ K
$"
ÍÍK M
$str
ÍÍM c
{
ÍÍc d
id
ÍÍd f
}
ÍÍf g
"
ÍÍg h
)
ÍÍh i
)
ÍÍi j
.
ÍÍj k
Result
ÍÍk q
;
ÍÍq r
}
ÎÎ 
catch
ÏÏ 
(
ÏÏ 
	Exception
ÏÏ 
ex
ÏÏ 
)
ÏÏ  
{
ÌÌ 
throw
ÓÓ 
new
ÓÓ 
	Exception
ÓÓ #
(
ÓÓ# $
$"
ÓÓ$ &
$str
ÓÓ& J
{
ÓÓJ K
ex
ÓÓK M
.
ÓÓM N
Message
ÓÓN U
}
ÓÓU V
"
ÓÓV W
)
ÓÓW X
;
ÓÓX Y
}
ÔÔ 
}
 	
public
ÙÙ 
ResponseDto
ÙÙ 

DeleteUser
ÙÙ %
(
ÙÙ% &
int
ÙÙ& )
id
ÙÙ* ,
)
ÙÙ, -
{
ıı 	
try
ˆˆ 
{
˜˜ 
var
˘˘ 
response
˘˘ 
=
˘˘ 
Task
˘˘ #
.
˘˘# $
Run
˘˘$ '
(
˘˘' (
async
˘˘( -
(
˘˘. /
)
˘˘/ 0
=>
˘˘1 3
await
˘˘4 9
SendPost
˘˘: B
<
˘˘B C
ResponseDto
˘˘C N
,
˘˘N O
int
˘˘P S
>
˘˘S T
(
˘˘T U
$"
˘˘U W
$str
˘˘W l
{
˘˘l m
id
˘˘m o
}
˘˘o p
"
˘˘p q
,
˘˘q r
id
˘˘s u
)
˘˘u v
)
˘˘v w
.
˘˘w x
Result
˘˘x ~
;
˘˘~ 
if
˚˚ 
(
˚˚ 
response
˚˚ 
!=
˚˚ 
null
˚˚  $
)
˚˚$ %
{
¸¸ 
return
˝˝ 
response
˝˝ #
;
˝˝# $
}
˛˛ 
else
ˇˇ 
{
ÄÄ 
throw
ÅÅ 
new
ÅÅ 
	Exception
ÅÅ '
(
ÅÅ' (
$str
ÅÅ( I
)
ÅÅI J
;
ÅÅJ K
}
ÇÇ 
}
ÉÉ 
catch
ÑÑ 
(
ÑÑ 
	Exception
ÑÑ 
ex
ÑÑ 
)
ÑÑ  
{
ÖÖ 
throw
ÜÜ 
new
ÜÜ 
	Exception
ÜÜ #
(
ÜÜ# $
$"
ÜÜ$ &
$str
ÜÜ& D
{
ÜÜD E
ex
ÜÜE G
.
ÜÜG H
Message
ÜÜH O
}
ÜÜO P
"
ÜÜP Q
)
ÜÜQ R
;
ÜÜR S
}
áá 
}
àà 	
public
çç 
ResponseDto
çç 

UpdateUser
çç %
(
çç% &
int
çç& )
id
çç* ,
,
çç, -
User
çç. 2
updatedUser
çç3 >
)
çç> ?
{
éé 	
try
èè 
{
êê 
var
ëë 
response
ëë 
=
ëë 
Task
ëë #
.
ëë# $
Run
ëë$ '
(
ëë' (
async
ëë( -
(
ëë. /
)
ëë/ 0
=>
ëë1 3
await
ëë4 9
SendPut
ëë: A
<
ëëA B
ResponseDto
ëëB M
,
ëëM N
User
ëëO S
>
ëëS T
(
ëëT U
$"
ëëU W
$str
ëëW l
{
ëël m
id
ëëm o
}
ëëo p
"
ëëp q
,
ëëq r
updatedUser
ëës ~
)
ëë~ 
)ëë Ä
.ëëÄ Å
ResultëëÅ á
;ëëá à
if
ìì 
(
ìì 
response
ìì 
!=
ìì 
null
ìì  $
)
ìì$ %
{
îî 
return
ïï 
response
ïï #
;
ïï# $
}
ññ 
else
óó 
{
òò 
throw
ôô 
new
ôô 
	Exception
ôô '
(
ôô' (
$str
ôô( K
)
ôôK L
;
ôôL M
}
öö 
}
õõ 
catch
úú 
(
úú 
	Exception
úú 
ex
úú 
)
úú  
{
ùù 
throw
ûû 
new
ûû 
	Exception
ûû #
(
ûû# $
$"
ûû$ &
$str
ûû& F
{
ûûF G
ex
ûûG I
.
ûûI J
Message
ûûJ Q
}
ûûQ R
"
ûûR S
)
ûûS T
;
ûûT U
}
üü 
}
†† 	
public
££ 
async
££ 
Task
££ 
<
££ "
UserCreationResponse
££ .
>
££. /
DirectCreateUser
££0 @
(
££@ A
User
££A E
user
££F J
)
££J K
{
§§ 	
try
•• 
{
¶¶ 
user
ßß 
.
ßß 
status
ßß 
=
ßß 
$num
ßß 
;
ßß  
user
®® 
.
®® 
registration_date
®® &
=
®®' (
DateTime
®®) 1
.
®®1 2
Now
®®2 5
;
®®5 6
var
™™ 
response
™™ 
=
™™ 
await
™™ $
SendPost
™™% -
<
™™- ."
UserCreationResponse
™™. B
,
™™B C
User
™™D H
>
™™H I
(
™™I J
$str
™™J b
,
™™b c
user
™™d h
)
™™h i
;
™™i j
if
´´ 
(
´´ 
response
´´ 
!=
´´ 
null
´´  $
)
´´$ %
{
¨¨ 
return
≠≠ 
response
≠≠ #
;
≠≠# $
}
ÆÆ 
else
ØØ 
{
∞∞ 
throw
±± 
new
±± 
	Exception
±± '
(
±±' (
$str
±±( S
)
±±S T
;
±±T U
}
≤≤ 
}
≥≥ 
catch
¥¥ 
(
¥¥ 
	Exception
¥¥ 
ex
¥¥ 
)
¥¥  
{
µµ 
throw
∂∂ 
new
∂∂ 
	Exception
∂∂ #
(
∂∂# $
$"
∂∂$ &
$str
∂∂& K
{
∂∂K L
ex
∂∂L N
.
∂∂N O
Message
∂∂O V
}
∂∂V W
"
∂∂W X
)
∂∂X Y
;
∂∂Y Z
}
∑∑ 
}
∏∏ 	
}
øø 
}¿¿ Áá
WC:\Users\ASUS TUF A15\source\repos\DesarrolloSeguro\BankSystem\Banck\Proxy\ProxyLoan.cs
	namespace 	
Proxy
 
{ 
public 

class 
	ProxyLoan 
{ 
string 
BaseAddress 
= 
$str 6
;6 7
private 
async 
Task 
< 
T 
> 
SendPost &
<& '
T' (
,( )
PostData* 2
>2 3
(3 4
string4 :

requestURI; E
,E F
PostDataG O
dataP T
)T U
{ 	
T 
Result 
= 
default 
( 
T  
)  !
;! "
using 
( 
var 
Client 
= 
new  #

HttpClient$ .
(. /
)/ 0
)0 1
{ 
try 
{ 

requestURI 
=  
BaseAddress! ,
+- .

requestURI/ 9
;9 :
Client 
. !
DefaultRequestHeaders 0
.0 1
Accept1 7
.7 8
Clear8 =
(= >
)> ?
;? @
Client 
. !
DefaultRequestHeaders 0
.0 1
Accept1 7
.7 8
Add8 ;
(; <
new< ?+
MediaTypeWithQualityHeaderValue@ _
(_ `
$str` r
)r s
)s t
;t u
var 
JSONData  
=! "
JsonConvert# .
.. /
SerializeObject/ >
(> ?
data? C
)C D
;D E
var 
Response  
=! "
await# (
Client) /
./ 0
	PostAsync0 9
(9 :

requestURI: D
,D E
newF I
StringContentJ W
(W X
JSONDataX `
,` a
Encodingb j
.j k
UTF8k o
,o p
$str	q É
)
É Ñ
)
Ñ Ö
;
Ö Ü
var!! 
ResultWebAPI!! $
=!!% &
await!!' ,
Response!!- 5
.!!5 6
Content!!6 =
.!!= >
ReadAsStringAsync!!> O
(!!O P
)!!P Q
;!!Q R
Result"" 
="" 
JsonConvert"" (
.""( )
DeserializeObject"") :
<"": ;
T""; <
>""< =
(""= >
ResultWebAPI""> J
)""J K
;""K L
}## 
catch$$ 
($$ 
	Exception$$  
ex$$! #
)$$# $
{%% 
Console&& 
.&& 
	WriteLine&& %
(&&% &
$"&&& (
$str&&( ;
{&&; <
ex&&< >
.&&> ?
Message&&? F
}&&F G
"&&G H
)&&H I
;&&I J
}'' 
}(( 
return)) 
Result)) 
;)) 
}** 	
private-- 
async-- 
Task-- 
<-- 
T-- 
>-- 
SendGet-- %
<--% &
T--& '
>--' (
(--( )
string--) /

requestURI--0 :
)--: ;
{.. 	
T// 
Result// 
=// 
default// 
(// 
T//  
)//  !
;//! "
using00 
(00 
var00 
Client00 
=00 
new00  #

HttpClient00$ .
(00. /
)00/ 0
)000 1
{11 
try22 
{33 

requestURI44 
=44  
BaseAddress44! ,
+44- .

requestURI44/ 9
;449 :
Client55 
.55 !
DefaultRequestHeaders55 0
.550 1
Accept551 7
.557 8
Clear558 =
(55= >
)55> ?
;55? @
Client66 
.66 !
DefaultRequestHeaders66 0
.660 1
Accept661 7
.667 8
Add668 ;
(66; <
new66< ?+
MediaTypeWithQualityHeaderValue66@ _
(66_ `
$str66` r
)66r s
)66s t
;66t u
var88 

ResultJSON88 "
=88# $
await88% *
Client88+ 1
.881 2
GetStringAsync882 @
(88@ A

requestURI88A K
)88K L
;88L M
Result99 
=99 
JsonConvert99 (
.99( )
DeserializeObject99) :
<99: ;
T99; <
>99< =
(99= >

ResultJSON99> H
)99H I
;99I J
}:: 
catch;; 
(;; 
	Exception;;  
ex;;! #
);;# $
{<< 
Console== 
.== 
	WriteLine== %
(==% &
$"==& (
$str==( :
{==: ;
ex==; =
.=== >
Message==> E
}==E F
"==F G
)==G H
;==H I
}>> 
}?? 
return@@ 
Result@@ 
;@@ 
}AA 	
privateDD 
asyncDD 
TaskDD 
<DD 
TDD 
>DD 
SendPutDD %
<DD% &
TDD& '
,DD' (
PutDataDD) 0
>DD0 1
(DD1 2
stringDD2 8

requestURIDD9 C
,DDC D
PutDataDDE L
dataDDM Q
)DDQ R
{EE 	
TFF 
ResultFF 
=FF 
defaultFF 
(FF 
TFF  
)FF  !
;FF! "
usingGG 
(GG 
varGG 
ClientGG 
=GG 
newGG  #

HttpClientGG$ .
(GG. /
)GG/ 0
)GG0 1
{HH 
tryII 
{JJ 

requestURIKK 
=KK  
BaseAddressKK! ,
+KK- .

requestURIKK/ 9
;KK9 :
ClientLL 
.LL !
DefaultRequestHeadersLL 0
.LL0 1
AcceptLL1 7
.LL7 8
ClearLL8 =
(LL= >
)LL> ?
;LL? @
ClientMM 
.MM !
DefaultRequestHeadersMM 0
.MM0 1
AcceptMM1 7
.MM7 8
AddMM8 ;
(MM; <
newMM< ?+
MediaTypeWithQualityHeaderValueMM@ _
(MM_ `
$strMM` r
)MMr s
)MMs t
;MMt u
varOO 
JSONDataOO  
=OO! "
JsonConvertOO# .
.OO. /
SerializeObjectOO/ >
(OO> ?
dataOO? C
)OOC D
;OOD E
varPP 
ResponsePP  
=PP! "
awaitPP# (
ClientPP) /
.PP/ 0
PutAsyncPP0 8
(PP8 9

requestURIPP9 C
,PPC D
newPPE H
StringContentPPI V
(PPV W
JSONDataPPW _
,PP_ `
EncodingPPa i
.PPi j
UTF8PPj n
,PPn o
$str	PPp Ç
)
PPÇ É
)
PPÉ Ñ
;
PPÑ Ö
varRR 
ResultWebAPIRR $
=RR% &
awaitRR' ,
ResponseRR- 5
.RR5 6
ContentRR6 =
.RR= >
ReadAsStringAsyncRR> O
(RRO P
)RRP Q
;RRQ R
ResultSS 
=SS 
JsonConvertSS (
.SS( )
DeserializeObjectSS) :
<SS: ;
TSS; <
>SS< =
(SS= >
ResultWebAPISS> J
)SSJ K
;SSK L
}TT 
catchUU 
(UU 
	ExceptionUU  
exUU! #
)UU# $
{VV 
ConsoleWW 
.WW 
	WriteLineWW %
(WW% &
$"WW& (
$strWW( :
{WW: ;
exWW; =
.WW= >
MessageWW> E
}WWE F
"WWF G
)WWG H
;WWH I
}XX 
}YY 
returnZZ 
ResultZZ 
;ZZ 
}[[ 	
public`` 
async`` 
Task`` 
<`` 
ResponseDto`` %
>``% &

CreateLoan``' 1
(``1 2
Loan``2 6
loan``7 ;
)``; <
{aa 	
trybb 
{cc 
vardd 
responsedd 
=dd 
awaitdd $
SendPostdd% -
<dd- .
ResponseDtodd. 9
,dd9 :
Loandd; ?
>dd? @
(dd@ A
$strddA W
,ddW X
loanddY ]
)dd] ^
;dd^ _
ifff 
(ff 
responseff 
!=ff 
nullff  $
)ff$ %
{gg 
returnhh 
responsehh #
;hh# $
}ii 
elsejj 
{kk 
throwll 
newll 
	Exceptionll '
(ll' (
$strll( R
)llR S
;llS T
}mm 
}nn 
catchoo 
(oo 
	Exceptionoo 
exoo 
)oo  
{pp 
throwqq 
newqq 
	Exceptionqq #
(qq# $
$"qq$ &
$strqq& M
{qqM N
exqqN P
.qqP Q
MessageqqQ X
}qqX Y
"qqY Z
)qqZ [
;qq[ \
}rr 
}ss 	
publicvv 
asyncvv 
Taskvv 
<vv 
LoanResponseDtovv )
>vv) *

GetAllLoanvv+ 5
(vv5 6
)vv6 7
{ww 	
tryxx 
{yy 
varzz 
responsezz 
=zz 
awaitzz $
SendGetzz% ,
<zz, -
LoanResponseDtozz- <
>zz< =
(zz= >
$strzz> U
)zzU V
;zzV W
if|| 
(|| 
response|| 
!=|| 
null||  $
)||$ %
{}} 
return~~ 
response~~ #
;~~# $
} 
else
ÄÄ 
{
ÅÅ 
throw
ÇÇ 
new
ÇÇ 
	Exception
ÇÇ '
(
ÇÇ' (
$str
ÇÇ( S
)
ÇÇS T
;
ÇÇT U
}
ÉÉ 
}
ÑÑ 
catch
ÖÖ 
(
ÖÖ 
	Exception
ÖÖ 
ex
ÖÖ 
)
ÖÖ  
{
ÜÜ 
throw
áá 
new
áá 
	Exception
áá #
(
áá# $
$"
áá$ &
$str
áá& O
{
ááO P
ex
ááP R
.
ááR S
Message
ááS Z
}
ááZ [
"
áá[ \
)
áá\ ]
;
áá] ^
}
àà 
}
ââ 	
public
åå 
async
åå 
Task
åå 
<
åå 
LoanResponseDto
åå )
>
åå) *
GetLoanById
åå+ 6
(
åå6 7
int
åå7 :
id
åå; =
)
åå= >
{
çç 	
try
éé 
{
èè 
var
ëë 
response
ëë 
=
ëë 
await
ëë $
SendGet
ëë% ,
<
ëë, -
LoanResponseDto
ëë- <
>
ëë< =
(
ëë= >
$"
ëë> @
$str
ëë@ V
{
ëëV W
id
ëëW Y
}
ëëY Z
"
ëëZ [
)
ëë[ \
;
ëë\ ]
if
îî 
(
îî 
response
îî 
==
îî 
null
îî  $
||
îî% '
response
îî( 0
.
îî0 1
Loan
îî1 5
==
îî6 8
null
îî9 =
)
îî= >
{
ïï 
return
óó 
new
óó 
LoanResponseDto
óó .
{
òò 
Success
ôô 
=
ôô  !
false
ôô" '
,
ôô' (
Message
öö 
=
öö  !
$str
öö" X
}
õõ 
;
õõ 
}
úú 
response
üü 
.
üü 
Success
üü  
=
üü! "
true
üü# '
;
üü' (
return
†† 
response
†† 
;
††  
}
°° 
catch
¢¢ 
(
¢¢ 
	Exception
¢¢ 
ex
¢¢ 
)
¢¢  
{
££ 
return
•• 
new
•• 
LoanResponseDto
•• *
{
¶¶ 
Success
ßß 
=
ßß 
false
ßß #
,
ßß# $
Message
®® 
=
®® 
$"
®®  
$str
®®  P
{
®®P Q
ex
®®Q S
.
®®S T
Message
®®T [
}
®®[ \
"
®®\ ]
}
©© 
;
©© 
}
™™ 
}
´´ 	
public
ÆÆ 
async
ÆÆ 
Task
ÆÆ 
<
ÆÆ 
ResponseDto
ÆÆ %
>
ÆÆ% &
DeleteUserData
ÆÆ' 5
(
ÆÆ5 6
int
ÆÆ6 9
id
ÆÆ: <
)
ÆÆ< =
{
ØØ 	
try
∞∞ 
{
±± 
return
≤≤ 
await
≤≤ 
SendPost
≤≤ %
<
≤≤% &
ResponseDto
≤≤& 1
,
≤≤1 2
int
≤≤3 6
>
≤≤6 7
(
≤≤7 8
$"
≤≤8 :
$str
≤≤: O
{
≤≤O P
id
≤≤P R
}
≤≤R S
"
≤≤S T
,
≤≤T U
id
≤≤V X
)
≤≤X Y
;
≤≤Y Z
}
≥≥ 
catch
¥¥ 
(
¥¥ 
	Exception
¥¥ 
ex
¥¥ 
)
¥¥  
{
µµ 
throw
∂∂ 
new
∂∂ 
	Exception
∂∂ #
(
∂∂# $
$"
∂∂$ &
$str
∂∂& P
{
∂∂P Q
ex
∂∂Q S
.
∂∂S T
Message
∂∂T [
}
∂∂[ \
"
∂∂\ ]
)
∂∂] ^
;
∂∂^ _
}
∑∑ 
}
∏∏ 	
public
ºº 
async
ºº 
Task
ºº 
<
ºº 
LoanResponseDto
ºº )
>
ºº) *
UpdateUserData
ºº+ 9
(
ºº9 :
int
ºº: =
id
ºº> @
,
ºº@ A
Loan
ººB F
loan
ººG K
)
ººK L
{
ΩΩ 	
try
ææ 
{
øø 
var
¡¡ 
response
¡¡ 
=
¡¡ 
await
¡¡ $
SendPut
¡¡% ,
<
¡¡, -
LoanResponseDto
¡¡- <
,
¡¡< =
Loan
¡¡> B
>
¡¡B C
(
¡¡C D
$"
¡¡D F
$str
¡¡F [
{
¡¡[ \
id
¡¡\ ^
}
¡¡^ _
"
¡¡_ `
,
¡¡` a
loan
¡¡b f
)
¡¡f g
;
¡¡g h
if
ƒƒ 
(
ƒƒ 
response
ƒƒ 
==
ƒƒ 
null
ƒƒ  $
||
ƒƒ% '
!
ƒƒ( )
response
ƒƒ) 1
.
ƒƒ1 2
Success
ƒƒ2 9
)
ƒƒ9 :
{
≈≈ 
return
∆∆ 
new
∆∆ 
LoanResponseDto
∆∆ .
{
«« 
Success
»» 
=
»»  !
false
»»" '
,
»»' (
Message
…… 
=
……  !
$str
……" B
}
   
;
   
}
ÀÀ 
return
ŒŒ 
response
ŒŒ 
;
ŒŒ  
}
œœ 
catch
–– 
(
–– 
	Exception
–– 
ex
–– 
)
––  
{
—— 
return
““ 
new
““ 
LoanResponseDto
““ *
{
”” 
Success
‘‘ 
=
‘‘ 
false
‘‘ #
,
‘‘# $
Message
’’ 
=
’’ 
$"
’’  
$str
’’  L
{
’’L M
ex
’’M O
.
’’O P
Message
’’P W
}
’’W X
"
’’X Y
}
÷÷ 
;
÷÷ 
}
◊◊ 
}
ÿÿ 	
public
€€ 
async
€€ 
Task
€€ 
<
€€ 
LoanResponseDto
€€ )
>
€€) *
GetLoansByUserId
€€+ ;
(
€€; <
int
€€< ?
userId
€€@ F
)
€€F G
{
‹‹ 	
try
›› 
{
ﬁﬁ 
var
‡‡ 
response
‡‡ 
=
‡‡ 
await
‡‡ $
SendGet
‡‡% ,
<
‡‡, -
LoanResponseDto
‡‡- <
>
‡‡< =
(
‡‡= >
$"
‡‡> @
$str
‡‡@ [
{
‡‡[ \
userId
‡‡\ b
}
‡‡b c
"
‡‡c d
)
‡‡d e
;
‡‡e f
if
„„ 
(
„„ 
response
„„ 
==
„„ 
null
„„  $
||
„„% '
response
„„( 0
.
„„0 1
Loans
„„1 6
==
„„7 9
null
„„: >
||
„„? A
!
„„B C
response
„„C K
.
„„K L
Loans
„„L Q
.
„„Q R
Any
„„R U
(
„„U V
)
„„V W
)
„„W X
{
‰‰ 
return
ÊÊ 
new
ÊÊ 
LoanResponseDto
ÊÊ .
{
ÁÁ 
Success
ËË 
=
ËË  !
false
ËË" '
,
ËË' (
Message
ÈÈ 
=
ÈÈ  !
$str
ÈÈ" [
}
ÍÍ 
;
ÍÍ 
}
ÎÎ 
response
ÓÓ 
.
ÓÓ 
Success
ÓÓ  
=
ÓÓ! "
true
ÓÓ# '
;
ÓÓ' (
return
ÔÔ 
response
ÔÔ 
;
ÔÔ  
}
 
catch
ÒÒ 
(
ÒÒ 
	Exception
ÒÒ 
ex
ÒÒ 
)
ÒÒ  
{
ÚÚ 
return
ÙÙ 
new
ÙÙ 
LoanResponseDto
ÙÙ *
{
ıı 
Success
ˆˆ 
=
ˆˆ 
false
ˆˆ #
,
ˆˆ# $
Message
˜˜ 
=
˜˜ 
$"
˜˜  
$str
˜˜  L
{
˜˜L M
ex
˜˜M O
.
˜˜O P
Message
˜˜P W
}
˜˜W X
"
˜˜X Y
}
¯¯ 
;
¯¯ 
}
˘˘ 
}
˙˙ 	
}
ÄÄ 
}ÅÅ ãU
_C:\Users\ASUS TUF A15\source\repos\DesarrolloSeguro\BankSystem\Banck\Proxy\ProxyAmortization.cs
	namespace 	
Proxy
 
{ 
public 

class 
ProxyAmortization "
{ 
string 
BaseAddress 
= 
$str 6
;6 7
private 
async 
Task 
< 
T 
> 
SendPost &
<& '
T' (
,( )
PostData* 2
>2 3
(3 4
string4 :

requestURI; E
,E F
PostDataG O
dataP T
)T U
{ 	
T 
Result 
= 
default 
( 
T  
)  !
;! "
using 
( 
var 
Client 
= 
new  #

HttpClient$ .
(. /
)/ 0
)0 1
{ 
try 
{ 

requestURI 
=  
BaseAddress! ,
+- .

requestURI/ 9
;9 :
Client 
. !
DefaultRequestHeaders 0
.0 1
Accept1 7
.7 8
Clear8 =
(= >
)> ?
;? @
Client 
. !
DefaultRequestHeaders 0
.0 1
Accept1 7
.7 8
Add8 ;
(; <
new< ?+
MediaTypeWithQualityHeaderValue@ _
(_ `
$str` r
)r s
)s t
;t u
var 
JSONData  
=! "
JsonConvert# .
.. /
SerializeObject/ >
(> ?
data? C
)C D
;D E
var 
Response  
=! "
await# (
Client) /
./ 0
	PostAsync0 9
(9 :

requestURI: D
,D E
newF I
StringContentJ W
(W X
JSONDataX `
,` a
Encodingb j
.j k
UTF8k o
,o p
$str	q É
)
É Ñ
)
Ñ Ö
;
Ö Ü
var   
ResultWebAPI   $
=  % &
await  ' ,
Response  - 5
.  5 6
Content  6 =
.  = >
ReadAsStringAsync  > O
(  O P
)  P Q
;  Q R
Result!! 
=!! 
JsonConvert!! (
.!!( )
DeserializeObject!!) :
<!!: ;
T!!; <
>!!< =
(!!= >
ResultWebAPI!!> J
)!!J K
;!!K L
}"" 
catch## 
(## 
	Exception##  
ex##! #
)### $
{$$ 
Console%% 
.%% 
	WriteLine%% %
(%%% &
$"%%& (
$str%%( ;
{%%; <
ex%%< >
.%%> ?
Message%%? F
}%%F G
"%%G H
)%%H I
;%%I J
}&& 
}'' 
return(( 
Result(( 
;(( 
})) 	
private,, 
async,, 
Task,, 
<,, 
T,, 
>,, 
SendGet,, %
<,,% &
T,,& '
>,,' (
(,,( )
string,,) /

requestURI,,0 :
),,: ;
{-- 	
T.. 
Result.. 
=.. 
default.. 
(.. 
T..  
)..  !
;..! "
using// 
(// 
var// 
Client// 
=// 
new//  #

HttpClient//$ .
(//. /
)/// 0
)//0 1
{00 
try11 
{22 

requestURI33 
=33  
BaseAddress33! ,
+33- .

requestURI33/ 9
;339 :
Client44 
.44 !
DefaultRequestHeaders44 0
.440 1
Accept441 7
.447 8
Clear448 =
(44= >
)44> ?
;44? @
Client55 
.55 !
DefaultRequestHeaders55 0
.550 1
Accept551 7
.557 8
Add558 ;
(55; <
new55< ?+
MediaTypeWithQualityHeaderValue55@ _
(55_ `
$str55` r
)55r s
)55s t
;55t u
var77 

ResultJSON77 "
=77# $
await77% *
Client77+ 1
.771 2
GetStringAsync772 @
(77@ A

requestURI77A K
)77K L
;77L M
Result88 
=88 
JsonConvert88 (
.88( )
DeserializeObject88) :
<88: ;
T88; <
>88< =
(88= >

ResultJSON88> H
)88H I
;88I J
}99 
catch:: 
(:: 
	Exception::  
ex::! #
)::# $
{;; 
Console<< 
.<< 
	WriteLine<< %
(<<% &
$"<<& (
$str<<( :
{<<: ;
ex<<; =
.<<= >
Message<<> E
}<<E F
"<<F G
)<<G H
;<<H I
}== 
}>> 
return?? 
Result?? 
;?? 
}@@ 	
privateCC 
asyncCC 
TaskCC 
<CC 
TCC 
>CC 
SendPutCC %
<CC% &
TCC& '
,CC' (
PutDataCC) 0
>CC0 1
(CC1 2
stringCC2 8

requestURICC9 C
,CCC D
PutDataCCE L
dataCCM Q
)CCQ R
{DD 	
TEE 
ResultEE 
=EE 
defaultEE 
(EE 
TEE  
)EE  !
;EE! "
usingFF 
(FF 
varFF 
ClientFF 
=FF 
newFF  #

HttpClientFF$ .
(FF. /
)FF/ 0
)FF0 1
{GG 
tryHH 
{II 

requestURIJJ 
=JJ  
BaseAddressJJ! ,
+JJ- .

requestURIJJ/ 9
;JJ9 :
ClientKK 
.KK !
DefaultRequestHeadersKK 0
.KK0 1
AcceptKK1 7
.KK7 8
ClearKK8 =
(KK= >
)KK> ?
;KK? @
ClientLL 
.LL !
DefaultRequestHeadersLL 0
.LL0 1
AcceptLL1 7
.LL7 8
AddLL8 ;
(LL; <
newLL< ?+
MediaTypeWithQualityHeaderValueLL@ _
(LL_ `
$strLL` r
)LLr s
)LLs t
;LLt u
varNN 
JSONDataNN  
=NN! "
JsonConvertNN# .
.NN. /
SerializeObjectNN/ >
(NN> ?
dataNN? C
)NNC D
;NND E
varOO 
ResponseOO  
=OO! "
awaitOO# (
ClientOO) /
.OO/ 0
PutAsyncOO0 8
(OO8 9

requestURIOO9 C
,OOC D
newOOE H
StringContentOOI V
(OOV W
JSONDataOOW _
,OO_ `
EncodingOOa i
.OOi j
UTF8OOj n
,OOn o
$str	OOp Ç
)
OOÇ É
)
OOÉ Ñ
;
OOÑ Ö
varQQ 
ResultWebAPIQQ $
=QQ% &
awaitQQ' ,
ResponseQQ- 5
.QQ5 6
ContentQQ6 =
.QQ= >
ReadAsStringAsyncQQ> O
(QQO P
)QQP Q
;QQQ R
ResultRR 
=RR 
JsonConvertRR (
.RR( )
DeserializeObjectRR) :
<RR: ;
TRR; <
>RR< =
(RR= >
ResultWebAPIRR> J
)RRJ K
;RRK L
}SS 
catchTT 
(TT 
	ExceptionTT  
exTT! #
)TT# $
{UU 
ConsoleVV 
.VV 
	WriteLineVV %
(VV% &
$"VV& (
$strVV( :
{VV: ;
exVV; =
.VV= >
MessageVV> E
}VVE F
"VVF G
)VVG H
;VVH I
}WW 
}XX 
returnYY 
ResultYY 
;YY 
}ZZ 	
public]] 
async]] 
Task]] 
<]] #
AmortizationResponseDto]] 1
>]]1 2'
GetLoanAmortizationSchedule]]3 N
(]]N O
int]]O R
loanId]]S Y
)]]Y Z
{^^ 	
try__ 
{`` 
varaa 
responseaa 
=aa 
awaitaa $
SendGetaa% ,
<aa, -#
AmortizationResponseDtoaa- D
>aaD E
(aaE F
$"aaF H
$straaH R
{aaR S
loanIdaaS Y
}aaY Z
$straaZ g
"aag h
)aah i
;aai j
ifcc 
(cc 
responsecc 
!=cc 
nullcc  $
&&cc% '
responsecc( 0
.cc0 1
Successcc1 8
)cc8 9
{dd 
returnee 
responseee #
;ee# $
}ff 
elsegg 
{hh 
throwii 
newii 
	Exceptionii '
(ii' (
$strii( p
)iip q
;iiq r
}jj 
}kk 
catchll 
(ll 
	Exceptionll 
exll 
)ll  
{mm 
thrownn 
newnn 
	Exceptionnn #
(nn# $
$"nn$ &
$strnn& V
{nnV W
exnnW Y
.nnY Z
MessagennZ a
}nna b
"nnb c
)nnc d
;nnd e
}oo 
}pp 	
publicss 
asyncss 
Taskss 
<ss 
ResponseDtoss %
>ss% &
PayInstallmentss' 5
(ss5 6
intss6 9
amortizationIdss: H
)ssH I
{tt 	
tryuu 
{vv 
varxx 
responsexx 
=xx 
awaitxx $
SendPostxx% -
<xx- .
ResponseDtoxx. 9
,xx9 :
intxx; >
>xx> ?
(xx? @
$"xx@ B
$strxxB X
{xxX Y
amortizationIdxxY g
}xxg h
"xxh i
,xxi j
amortizationIdxxk y
)xxy z
;xxz {
ifyy 
(yy 
responseyy 
!=yy 
nullyy  $
)yy$ %
{zz 
return{{ 
response{{ #
;{{# $
}|| 
else}} 
{~~ 
throw 
new 
	Exception '
(' (
$str( R
)R S
;S T
}
ÄÄ 
}
ÅÅ 
catch
ÇÇ 
(
ÇÇ 
	Exception
ÇÇ 
ex
ÇÇ 
)
ÇÇ  
{
ÉÉ 
throw
ÑÑ 
new
ÑÑ 
	Exception
ÑÑ #
(
ÑÑ# $
$"
ÑÑ$ &
$str
ÑÑ& ?
{
ÑÑ? @
ex
ÑÑ@ B
.
ÑÑB C
Message
ÑÑC J
}
ÑÑJ K
"
ÑÑK L
)
ÑÑL M
;
ÑÑM N
}
ÖÖ 
}
ÜÜ 	
}
áá 
}àà 
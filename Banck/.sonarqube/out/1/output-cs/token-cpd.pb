ˆ
]C:\Users\ASUS TUF A15\source\repos\bancoNuevo\BankSystem\Banck\DAL\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str 
) 
]  
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str  
)  !
]! "
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[   
assembly   	
:  	 

AssemblyVersion   
(   
$str   $
)  $ %
]  % &
[!! 
assembly!! 	
:!!	 

AssemblyFileVersion!! 
(!! 
$str!! (
)!!( )
]!!) *Õ
QC:\Users\ASUS TUF A15\source\repos\bancoNuevo\BankSystem\Banck\DAL\IRepository.cs
	namespace		 	
DAL		
 
{

 
public 

	interface 
IRepository  
:! "
IDisposable# .
{ 
TEntity 
Create 
< 
TEntity 
> 
(  
TEntity  '
toCreate( 0
)0 1
where2 7
TEntity8 ?
:@ A
classB G
;G H
bool 
Delete 
< 
TEntity 
> 
( 
TEntity $
toDelete% -
)- .
where/ 4
TEntity5 <
:= >
class? D
;D E
bool 
Update 
< 
TEntity 
> 
( 
TEntity $
toUpdate% -
)- .
where/ 4
TEntity5 <
:= >
class? D
;D E
TEntity 
Retrieve 
< 
TEntity  
>  !
(! "

Expression" ,
<, -
Func- 1
<1 2
TEntity2 9
,9 :
bool; ?
>? @
>@ A
criteriaB J
)J K
whereL Q
TEntityR Y
:Z [
class\ a
;a b
List 
< 
TEntity 
> 
Filter 
< 
TEntity $
>$ %
(% &

Expression& 0
<0 1
Func1 5
<5 6
TEntity6 =
,= >
bool? C
>C D
>D E
criteriaF N
)N O
whereP U
TEntityV ]
:^ _
class` e
;e f
List 
< 
TEntity 
> 
RetrieveAll !
<! "
TEntity" )
>) *
(* +
)+ ,
where- 2
TEntity3 :
:; <
class= B
;B C
} 
} ‡;
RC:\Users\ASUS TUF A15\source\repos\bancoNuevo\BankSystem\Banck\DAL\EFRepository.cs
	namespace 	
DAL
 
{ 
public 

class 
EFRepository 
: 
IRepository  +
{ 
	DbContext 

_dbContext 
; 
public 
EFRepository 
( 
	DbContext %
	dbContext& /
)/ 0
{ 	

_dbContext 
= 
	dbContext "
;" #

_dbContext 
. 
Configuration $
.$ %
LazyLoadingEnabled% 7
=8 9
true: >
;> ?
} 	
public 
TEntity 
Create 
< 
TEntity %
>% &
(& '
TEntity' .
toCreate/ 7
)7 8
where9 >
TEntity? F
:G H
classI N
{ 	
TEntity 
result 
= 
default $
;$ %
try 
{ 

_dbContext 
. 
Set 
< 
TEntity &
>& '
(' (
)( )
.) *
Add* -
(- .
toCreate. 6
)6 7
;7 8

_dbContext 
. 
SaveChanges &
(& '
)' (
;( )
result 
= 
toCreate !
;! "
} 
catch   
(   
	Exception   
)   
{!! 
throw"" 
;"" 
}## 
return$$ 
result$$ 
;$$ 
}%% 	
public'' 
bool'' 
Delete'' 
<'' 
TEntity'' "
>''" #
(''# $
TEntity''$ +
toDelete'', 4
)''4 5
where''6 ;
TEntity''< C
:''D E
class''F K
{(( 	
bool)) 
result)) 
=)) 
false)) 
;))  
try** 
{++ 

_dbContext,, 
.,, 
Entry,,  
<,,  !
TEntity,,! (
>,,( )
(,,) *
toDelete,,* 2
),,2 3
.,,3 4
State,,4 9
=,,: ;
EntityState,,< G
.,,G H
Deleted,,H O
;,,O P
result-- 
=-- 

_dbContext-- #
.--# $
SaveChanges--$ /
(--/ 0
)--0 1
>--2 3
$num--4 5
;--5 6
}.. 
catch// 
(// 
	Exception// 
)// 
{00 
throw11 
;11 
}22 
return33 
result33 
;33 
}44 	
public66 
void66 
Dispose66 
(66 
)66 
{77 	
if88 
(88 

_dbContext88 
!=88 
null88 "
)88" #
{99 

_dbContext:: 
.:: 
Dispose:: "
(::" #
)::# $
;::$ %
};; 
}<< 	
public>> 
List>> 
<>> 
TEntity>> 
>>> 
Filter>> #
<>># $
TEntity>>$ +
>>>+ ,
(>>, -

Expression>>- 7
<>>7 8
Func>>8 <
<>>< =
TEntity>>= D
,>>D E
bool>>F J
>>>J K
>>>K L
criteria>>M U
)>>U V
where>>W \
TEntity>>] d
:>>e f
class>>g l
{?? 	
List@@ 
<@@ 
TEntity@@ 
>@@ 
result@@  
=@@! "
null@@# '
;@@' (
tryAA 
{BB 
resultCC 
=CC 

_dbContextCC #
.CC# $
SetCC$ '
<CC' (
TEntityCC( /
>CC/ 0
(CC0 1
)CC1 2
.CC2 3
WhereCC3 8
(CC8 9
criteriaCC9 A
)CCA B
.CCB C
ToListCCC I
(CCI J
)CCJ K
;CCK L
}DD 
catchEE 
(EE 
	ExceptionEE 
)EE 
{FF 
throwGG 
;GG 
}HH 
returnII 
resultII 
;II 
}JJ 	
publicLL 
TEntityLL 
RetrieveLL 
<LL  
TEntityLL  '
>LL' (
(LL( )

ExpressionLL) 3
<LL3 4
FuncLL4 8
<LL8 9
TEntityLL9 @
,LL@ A
boolLLB F
>LLF G
>LLG H
criteriaLLI Q
)LLQ R
whereLLS X
TEntityLLY `
:LLa b
classLLc h
{MM 	
TEntityNN 
resultNN 
=NN 
nullNN !
;NN! "
tryOO 
{PP 
resultQQ 
=QQ 

_dbContextQQ #
.QQ# $
SetQQ$ '
<QQ' (
TEntityQQ( /
>QQ/ 0
(QQ0 1
)QQ1 2
.QQ2 3
FirstOrDefaultQQ3 A
(QQA B
criteriaQQB J
)QQJ K
;QQK L
}RR 
catchSS 
(SS 
	ExceptionSS 
)SS 
{TT 
throwUU 
;UU 
}VV 
returnWW 
resultWW 
;WW 
}XX 	
publicZZ 
boolZZ 
UpdateZZ 
<ZZ 
TEntityZZ "
>ZZ" #
(ZZ# $
TEntityZZ$ +
toUpdateZZ, 4
)ZZ4 5
whereZZ6 ;
TEntityZZ< C
:ZZD E
classZZF K
{[[ 	
bool\\ 
result\\ 
=\\ 
false\\ 
;\\  
try]] 
{^^ 

_dbContext__ 
.__ 
Entry__  
<__  !
TEntity__! (
>__( )
(__) *
toUpdate__* 2
)__2 3
.__3 4
State__4 9
=__: ;
EntityState__< G
.__G H
Modified__H P
;__P Q
result`` 
=`` 

_dbContext`` #
.``# $
SaveChanges``$ /
(``/ 0
)``0 1
>``2 3
$num``4 5
;``5 6
}aa 
catchbb 
(bb 
	Exceptionbb 
)bb 
{cc 
throwdd 
;dd 
}ee 
returnff 
resultff 
;ff 
}gg 	
publicii 
Listii 
<ii 
TEntityii 
>ii 
RetrieveAllii (
<ii( )
TEntityii) 0
>ii0 1
(ii1 2
)ii2 3
whereii4 9
TEntityii: A
:iiB C
classiiD I
{jj 	
Listkk 
<kk 
TEntitykk 
>kk 
resultkk  
=kk! "
nullkk# '
;kk' (
tryll 
{mm 
resultoo 
=oo 

_dbContextoo #
.oo# $
Setoo$ '
<oo' (
TEntityoo( /
>oo/ 0
(oo0 1
)oo1 2
.oo2 3
ToListoo3 9
(oo9 :
)oo: ;
;oo; <
}pp 
catchqq 
(qq 
	Exceptionqq 
exqq 
)qq  
{rr 
throwtt 
newtt 
	Exceptiontt #
(tt# $
$strtt$ L
,ttL M
exttN P
)ttP Q
;ttQ R
}uu 
returnvv 
resultvv 
;vv 
}ww 	
}yy 
}zz ò
WC:\Users\ASUS TUF A15\source\repos\bancoNuevo\BankSystem\Banck\DAL\RepositoryFactory.cs
	namespace 	
DAL
 
{ 
public		 

class		 
RepositoryFactory		 "
{

 
public 
static 
IRepository !
CreateRepository" 2
(2 3
)3 4
{ 	
return 
new 
EFRepository #
(# $
new$ '
Entities( 0
.0 1
BankEntities1 =
(= >
)> ?
)? @
;@ A
} 	
} 
} 
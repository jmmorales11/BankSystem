@model Entities.Loan

@{
    ViewBag.Title = "Crear Préstamo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .loan-container {
        max-width: 600px;
        margin: 2rem auto;
        padding: 2rem;
        background-color: rgba(128, 128, 128, 0.3);
        backdrop-filter: blur(5px);
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .loan-title {
        text-align: center;
        margin-bottom: 1.5rem;
        color: #333;
        font-size: 1.8rem;
        font-weight: bold;
    }

    .form-group {
        margin-bottom: 1.2rem;
    }

    .form-control {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 0.6rem;
        width: 100%;
    }

    .btn-primary, .btn-outline-secondary {
        display: block;
        width: 100%;
        margin-top: 1.5rem;
    }
</style>

<div class="loan-container">
    <h2 class="loan-title">Crear Préstamo</h2>

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }

    @using (Html.BeginForm("CreateLoan", "Loan", FormMethod.Post, new { id = "loanForm", @class = "loan-form needs-validation", novalidate = "novalidate" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.user_id)

        <div class="form-group">
            @Html.LabelFor(model => model.requested_amount, "Monto Solicitado")
            @Html.TextBoxFor(model => model.requested_amount, new { @class = "form-control", type = "number", min = "100", step = "0.01", required = "required" })
            <div class="text-danger">@Html.ValidationMessageFor(model => model.requested_amount)</div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.interest_rate, "Tasa de Interés")
            @Html.TextBoxFor(model => model.interest_rate, new { @class = "form-control", type = "number", min = "0.01", step = "0.01", required = "required" })
            <div class="text-danger">@Html.ValidationMessageFor(model => model.interest_rate)</div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.payment_term_months, "Plazo (meses)")
            @Html.TextBoxFor(model => model.payment_term_months, new { @class = "form-control", type = "number", min = "1", step = "1", required = "required" })
            <div class="text-danger">@Html.ValidationMessageFor(model => model.payment_term_months)</div>
        </div>

        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#confirmLoanModal">Crear Préstamo</button>
    }
</div>

<!-- Modal de Confirmación -->
<div class="modal fade" id="confirmLoanModal" tabindex="-1" aria-labelledby="confirmLoanModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="confirmLoanModalLabel">Confirmar Creación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <p>¿Estás seguro de que deseas crear el préstamo?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="confirmLoanBtn">Confirmar</button>
            </div>
        </div>
    </div>
</div>

<div class="mt-3">
    @if (ViewBag.IsAdmin != null && (bool)ViewBag.IsAdmin)
    {
        <a href="@Url.Action("ListUser", "Loan")" class="btn btn-outline-secondary">Ir a Lista de Usuarios</a>
    }
    else
    {
        <a href="@Url.Action("MyProfile", "User", new { userId = ViewBag.UserId })" class="btn btn-outline-secondary">Volver a Mi Perfil</a>
    }
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.3/dist/jquery.validate.min.js"></script>
<script>
    $(document).ready(function () {
        $("#loanForm").validate({
            rules: {
                requested_amount: { required: true, min: 100, number: true },
                interest_rate: { required: true, min: 0.01, number: true },
                payment_term_months: { required: true, min: 1, digits: true }
            },
            messages: {
                requested_amount: { required: "Ingrese un monto.", min: "Debe ser mayor a 100." },
                interest_rate: { required: "Ingrese la tasa.", min: "Debe ser mayor a 0." },
                payment_term_months: { required: "Ingrese el plazo.", min: "Debe ser al menos 1 mes." }
            },
            errorClass: "text-danger",
            errorElement: "div"
        });

        // Validación extra antes de enviar
        $("#confirmLoanBtn").on("click", function () {
            var amount = parseFloat($("#requested_amount").val());
            var interestRate = parseFloat($("#interest_rate").val());
            var months = parseInt($("#payment_term_months").val());

            if (isNaN(amount) || isNaN(interestRate) || isNaN(months)) {
                alert("Por favor, ingrese valores numéricos válidos.");
                return;
            }

            var monthlyInterestRate = interestRate / 100 / 12;
            var basePow = Math.pow((1 + monthlyInterestRate), months);
            var denominator = basePow - 1;

            if (denominator === 0 || Math.abs(denominator) < 0.00001) {
                alert("Los valores ingresados generan una división por cero. Por favor, revise la tasa de interés y el plazo.");
                return;
            }

            // Si todo es válido, enviamos el formulario
            if ($("#loanForm").valid()) {
                $("#loanForm").submit();
            }
        });
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var token = localStorage.getItem("authToken");
        if (!token) {
            window.location.href = "/User/Login";
        }
    });
</script>
